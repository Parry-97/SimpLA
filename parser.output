Terminals unused in grammar

    ERROR


Grammar

    0 $accept: program $end

    1 program: var_decl_list func_decl_list body '.'

    2 var_decl_list: var_decl var_decl_list
    3              | %empty

    4 $@1: %empty

    5 var_decl: $@1 id_list DECL type ';'

    6 @2: %empty

    7 id_list: ID @2 ',' id_list
    8        | ID

    9 type: INTEGER
   10     | REAL
   11     | STRING
   12     | BOOLEAN
   13     | VOID

   14 func_decl_list: func_decl func_decl_list
   15               | %empty

   16 @3: %empty

   17 $@4: %empty

   18 $@5: %empty

   19 $@6: %empty

   20 func_decl: FUNC ID @3 $@4 '(' opt_param_list ')' DECL $@5 type var_decl_list body ';' $@6

   21 opt_param_list: param_list
   22               | %empty

   23 param_list: param_decl ',' param_list
   24           | param_decl

   25 $@7: %empty

   26 @8: %empty

   27 param_decl: $@7 ID @8 DECL type

   28 body: BODY stat_list END

   29 stat_list: stat ';' stat_list
   30          | stat ';'

   31 stat: assign_stat
   32     | if_stat
   33     | while_stat
   34     | for_stat
   35     | return_stat
   36     | read_stat
   37     | write_stat
   38     | func_call
   39     | BREAK

   40 @9: %empty

   41 assign_stat: ID @9 ASSIGN expr

   42 if_stat: IF expr THEN stat_list opt_else_stat END

   43 opt_else_stat: ELSE stat_list
   44              | %empty

   45 while_stat: WHILE expr DO stat_list END

   46 @10: %empty

   47 for_stat: FOR ID @10 ASSIGN expr TO expr DO stat_list END

   48 return_stat: RETURN opt_expr

   49 opt_expr: expr
   50         | %empty

   51 $@11: %empty

   52 $@12: %empty

   53 read_stat: READ $@11 '(' id_list $@12 ')'

   54 write_stat: write_op '(' expr_list ')'

   55 write_op: WRITE
   56         | WRITELN

   57 expr_list: expr ',' expr_list
   58          | expr

   59 expr: expr logic_op bool_term
   60     | bool_term

   61 logic_op: AND
   62         | OR

   63 bool_term: rel_term rel_op rel_term
   64          | rel_term

   65 rel_op: EQ
   66       | NE
   67       | GT
   68       | GE
   69       | LT
   70       | LE

   71 rel_term: rel_term low_prec_op low_term
   72         | low_term

   73 low_prec_op: PLUS
   74            | MINUS

   75 low_term: low_term high_prec_op factor
   76         | factor

   77 high_prec_op: MUL
   78             | DIV

   79 factor: unary_op factor
   80       | '(' expr ')'
   81       | ID
   82       | const
   83       | func_call
   84       | cond_expr
   85       | cast '(' expr ')'

   86 unary_op: MINUS
   87         | NOT

   88 const: INTCONST
   89      | REALCONST
   90      | STRCONST
   91      | BOOLCONST

   92 @13: %empty

   93 func_call: ID @13 '(' opt_expr_list ')'

   94 opt_expr_list: expr_list
   95              | %empty

   96 cond_expr: IF expr THEN expr ELSE expr END

   97 cast: INTEGER
   98     | REAL


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 20 53 54 80 85 93
    ')' (41) 20 53 54 80 85 93
    ',' (44) 7 23 57
    '.' (46) 1
    ';' (59) 5 20 29 30
    error (256)
    FUNC (258) 20
    BODY (259) 28
    END (260) 28 42 45 47 96
    IF (261) 42 96
    THEN (262) 42 96
    ELSE (263) 43 96
    WHILE (264) 45
    DO (265) 45 47
    FOR (266) 47
    TO (267) 47
    BREAK (268) 39
    RETURN (269) 48
    WRITE (270) 55
    WRITELN (271) 56
    READ (272) 53
    AND (273) 61
    OR (274) 62
    NOT (275) 87
    EQ (276) 65
    NE (277) 66
    GE (278) 68
    GT (279) 67
    LT (280) 69
    LE (281) 70
    MUL (282) 77
    PLUS (283) 73
    DIV (284) 78
    MINUS (285) 74 86
    DECL (286) 5 20 27
    VOID (287) 13
    INTEGER (288) 9 97
    STRING (289) 11
    BOOLEAN (290) 12
    REAL (291) 10 98
    REALCONST (292) 89
    INTCONST (293) 88
    STRCONST (294) 90
    ID (295) 7 8 20 27 41 47 81 93
    BOOLCONST (296) 91
    ASSIGN (297) 41 47
    ERROR (298)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1
        on right: 0
    var_decl_list (51)
        on left: 2 3
        on right: 1 2 20
    var_decl (52)
        on left: 5
        on right: 2
    $@1 (53)
        on left: 4
        on right: 5
    id_list (54)
        on left: 7 8
        on right: 5 7 53
    @2 (55)
        on left: 6
        on right: 7
    type (56)
        on left: 9 10 11 12 13
        on right: 5 20 27
    func_decl_list (57)
        on left: 14 15
        on right: 1 14
    func_decl (58)
        on left: 20
        on right: 14
    @3 (59)
        on left: 16
        on right: 20
    $@4 (60)
        on left: 17
        on right: 20
    $@5 (61)
        on left: 18
        on right: 20
    $@6 (62)
        on left: 19
        on right: 20
    opt_param_list (63)
        on left: 21 22
        on right: 20
    param_list (64)
        on left: 23 24
        on right: 21 23
    param_decl (65)
        on left: 27
        on right: 23 24
    $@7 (66)
        on left: 25
        on right: 27
    @8 (67)
        on left: 26
        on right: 27
    body (68)
        on left: 28
        on right: 1 20
    stat_list (69)
        on left: 29 30
        on right: 28 29 42 43 45 47
    stat (70)
        on left: 31 32 33 34 35 36 37 38 39
        on right: 29 30
    assign_stat (71)
        on left: 41
        on right: 31
    @9 (72)
        on left: 40
        on right: 41
    if_stat (73)
        on left: 42
        on right: 32
    opt_else_stat (74)
        on left: 43 44
        on right: 42
    while_stat (75)
        on left: 45
        on right: 33
    for_stat (76)
        on left: 47
        on right: 34
    @10 (77)
        on left: 46
        on right: 47
    return_stat (78)
        on left: 48
        on right: 35
    opt_expr (79)
        on left: 49 50
        on right: 48
    read_stat (80)
        on left: 53
        on right: 36
    $@11 (81)
        on left: 51
        on right: 53
    $@12 (82)
        on left: 52
        on right: 53
    write_stat (83)
        on left: 54
        on right: 37
    write_op (84)
        on left: 55 56
        on right: 54
    expr_list (85)
        on left: 57 58
        on right: 54 57 94
    expr (86)
        on left: 59 60
        on right: 41 42 45 47 49 57 58 59 80 85 96
    logic_op (87)
        on left: 61 62
        on right: 59
    bool_term (88)
        on left: 63 64
        on right: 59 60
    rel_op (89)
        on left: 65 66 67 68 69 70
        on right: 63
    rel_term (90)
        on left: 71 72
        on right: 63 64 71
    low_prec_op (91)
        on left: 73 74
        on right: 71
    low_term (92)
        on left: 75 76
        on right: 71 72 75
    high_prec_op (93)
        on left: 77 78
        on right: 75
    factor (94)
        on left: 79 80 81 82 83 84 85
        on right: 75 76 79
    unary_op (95)
        on left: 86 87
        on right: 79
    const (96)
        on left: 88 89 90 91
        on right: 82
    func_call (97)
        on left: 93
        on right: 38 83
    @13 (98)
        on left: 92
        on right: 93
    opt_expr_list (99)
        on left: 94 95
        on right: 93
    cond_expr (100)
        on left: 96
        on right: 84
    cast (101)
        on left: 97 98
        on right: 85


State 0

    0 $accept: . program $end

    ID        reduce using rule 4 ($@1)
    $default  reduce using rule 3 (var_decl_list)

    program        go to state 1
    var_decl_list  go to state 2
    var_decl       go to state 3
    $@1            go to state 4


State 1

    0 $accept: program . $end

    $end  shift, and go to state 5


State 2

    1 program: var_decl_list . func_decl_list body '.'

    FUNC  shift, and go to state 6

    $default  reduce using rule 15 (func_decl_list)

    func_decl_list  go to state 7
    func_decl       go to state 8


State 3

    2 var_decl_list: var_decl . var_decl_list

    ID        reduce using rule 4 ($@1)
    $default  reduce using rule 3 (var_decl_list)

    var_decl_list  go to state 9
    var_decl       go to state 3
    $@1            go to state 4


State 4

    5 var_decl: $@1 . id_list DECL type ';'

    ID  shift, and go to state 10

    id_list  go to state 11


State 5

    0 $accept: program $end .

    $default  accept


State 6

   20 func_decl: FUNC . ID @3 $@4 '(' opt_param_list ')' DECL $@5 type var_decl_list body ';' $@6

    ID  shift, and go to state 12


State 7

    1 program: var_decl_list func_decl_list . body '.'

    BODY  shift, and go to state 13

    body  go to state 14


State 8

   14 func_decl_list: func_decl . func_decl_list

    FUNC  shift, and go to state 6

    $default  reduce using rule 15 (func_decl_list)

    func_decl_list  go to state 15
    func_decl       go to state 8


State 9

    2 var_decl_list: var_decl var_decl_list .

    $default  reduce using rule 2 (var_decl_list)


State 10

    7 id_list: ID . @2 ',' id_list
    8        | ID .

    ','       reduce using rule 6 (@2)
    $default  reduce using rule 8 (id_list)

    @2  go to state 16


State 11

    5 var_decl: $@1 id_list . DECL type ';'

    DECL  shift, and go to state 17


State 12

   20 func_decl: FUNC ID . @3 $@4 '(' opt_param_list ')' DECL $@5 type var_decl_list body ';' $@6

    $default  reduce using rule 16 (@3)

    @3  go to state 18


State 13

   28 body: BODY . stat_list END

    IF       shift, and go to state 19
    WHILE    shift, and go to state 20
    FOR      shift, and go to state 21
    BREAK    shift, and go to state 22
    RETURN   shift, and go to state 23
    WRITE    shift, and go to state 24
    WRITELN  shift, and go to state 25
    READ     shift, and go to state 26
    ID       shift, and go to state 27

    stat_list    go to state 28
    stat         go to state 29
    assign_stat  go to state 30
    if_stat      go to state 31
    while_stat   go to state 32
    for_stat     go to state 33
    return_stat  go to state 34
    read_stat    go to state 35
    write_stat   go to state 36
    write_op     go to state 37
    func_call    go to state 38


State 14

    1 program: var_decl_list func_decl_list body . '.'

    '.'  shift, and go to state 39


State 15

   14 func_decl_list: func_decl func_decl_list .

    $default  reduce using rule 14 (func_decl_list)


State 16

    7 id_list: ID @2 . ',' id_list

    ','  shift, and go to state 40


State 17

    5 var_decl: $@1 id_list DECL . type ';'

    VOID     shift, and go to state 41
    INTEGER  shift, and go to state 42
    STRING   shift, and go to state 43
    BOOLEAN  shift, and go to state 44
    REAL     shift, and go to state 45

    type  go to state 46


State 18

   20 func_decl: FUNC ID @3 . $@4 '(' opt_param_list ')' DECL $@5 type var_decl_list body ';' $@6

    $default  reduce using rule 17 ($@4)

    $@4  go to state 47


State 19

   42 if_stat: IF . expr THEN stat_list opt_else_stat END

    IF         shift, and go to state 48
    NOT        shift, and go to state 49
    MINUS      shift, and go to state 50
    INTEGER    shift, and go to state 51
    REAL       shift, and go to state 52
    REALCONST  shift, and go to state 53
    INTCONST   shift, and go to state 54
    STRCONST   shift, and go to state 55
    ID         shift, and go to state 56
    BOOLCONST  shift, and go to state 57
    '('        shift, and go to state 58

    expr       go to state 59
    bool_term  go to state 60
    rel_term   go to state 61
    low_term   go to state 62
    factor     go to state 63
    unary_op   go to state 64
    const      go to state 65
    func_call  go to state 66
    cond_expr  go to state 67
    cast       go to state 68


State 20

   45 while_stat: WHILE . expr DO stat_list END

    IF         shift, and go to state 48
    NOT        shift, and go to state 49
    MINUS      shift, and go to state 50
    INTEGER    shift, and go to state 51
    REAL       shift, and go to state 52
    REALCONST  shift, and go to state 53
    INTCONST   shift, and go to state 54
    STRCONST   shift, and go to state 55
    ID         shift, and go to state 56
    BOOLCONST  shift, and go to state 57
    '('        shift, and go to state 58

    expr       go to state 69
    bool_term  go to state 60
    rel_term   go to state 61
    low_term   go to state 62
    factor     go to state 63
    unary_op   go to state 64
    const      go to state 65
    func_call  go to state 66
    cond_expr  go to state 67
    cast       go to state 68


State 21

   47 for_stat: FOR . ID @10 ASSIGN expr TO expr DO stat_list END

    ID  shift, and go to state 70


State 22

   39 stat: BREAK .

    $default  reduce using rule 39 (stat)


State 23

   48 return_stat: RETURN . opt_expr

    IF         shift, and go to state 48
    NOT        shift, and go to state 49
    MINUS      shift, and go to state 50
    INTEGER    shift, and go to state 51
    REAL       shift, and go to state 52
    REALCONST  shift, and go to state 53
    INTCONST   shift, and go to state 54
    STRCONST   shift, and go to state 55
    ID         shift, and go to state 56
    BOOLCONST  shift, and go to state 57
    '('        shift, and go to state 58

    $default  reduce using rule 50 (opt_expr)

    opt_expr   go to state 71
    expr       go to state 72
    bool_term  go to state 60
    rel_term   go to state 61
    low_term   go to state 62
    factor     go to state 63
    unary_op   go to state 64
    const      go to state 65
    func_call  go to state 66
    cond_expr  go to state 67
    cast       go to state 68


State 24

   55 write_op: WRITE .

    $default  reduce using rule 55 (write_op)


State 25

   56 write_op: WRITELN .

    $default  reduce using rule 56 (write_op)


State 26

   53 read_stat: READ . $@11 '(' id_list $@12 ')'

    $default  reduce using rule 51 ($@11)

    $@11  go to state 73


State 27

   41 assign_stat: ID . @9 ASSIGN expr
   93 func_call: ID . @13 '(' opt_expr_list ')'

    '('       reduce using rule 92 (@13)
    $default  reduce using rule 40 (@9)

    @9   go to state 74
    @13  go to state 75


State 28

   28 body: BODY stat_list . END

    END  shift, and go to state 76


State 29

   29 stat_list: stat . ';' stat_list
   30          | stat . ';'

    ';'  shift, and go to state 77


State 30

   31 stat: assign_stat .

    $default  reduce using rule 31 (stat)


State 31

   32 stat: if_stat .

    $default  reduce using rule 32 (stat)


State 32

   33 stat: while_stat .

    $default  reduce using rule 33 (stat)


State 33

   34 stat: for_stat .

    $default  reduce using rule 34 (stat)


State 34

   35 stat: return_stat .

    $default  reduce using rule 35 (stat)


State 35

   36 stat: read_stat .

    $default  reduce using rule 36 (stat)


State 36

   37 stat: write_stat .

    $default  reduce using rule 37 (stat)


State 37

   54 write_stat: write_op . '(' expr_list ')'

    '('  shift, and go to state 78


State 38

   38 stat: func_call .

    $default  reduce using rule 38 (stat)


State 39

    1 program: var_decl_list func_decl_list body '.' .

    $default  reduce using rule 1 (program)


State 40

    7 id_list: ID @2 ',' . id_list

    ID  shift, and go to state 10

    id_list  go to state 79


State 41

   13 type: VOID .

    $default  reduce using rule 13 (type)


State 42

    9 type: INTEGER .

    $default  reduce using rule 9 (type)


State 43

   11 type: STRING .

    $default  reduce using rule 11 (type)


State 44

   12 type: BOOLEAN .

    $default  reduce using rule 12 (type)


State 45

   10 type: REAL .

    $default  reduce using rule 10 (type)


State 46

    5 var_decl: $@1 id_list DECL type . ';'

    ';'  shift, and go to state 80


State 47

   20 func_decl: FUNC ID @3 $@4 . '(' opt_param_list ')' DECL $@5 type var_decl_list body ';' $@6

    '('  shift, and go to state 81


State 48

   96 cond_expr: IF . expr THEN expr ELSE expr END

    IF         shift, and go to state 48
    NOT        shift, and go to state 49
    MINUS      shift, and go to state 50
    INTEGER    shift, and go to state 51
    REAL       shift, and go to state 52
    REALCONST  shift, and go to state 53
    INTCONST   shift, and go to state 54
    STRCONST   shift, and go to state 55
    ID         shift, and go to state 56
    BOOLCONST  shift, and go to state 57
    '('        shift, and go to state 58

    expr       go to state 82
    bool_term  go to state 60
    rel_term   go to state 61
    low_term   go to state 62
    factor     go to state 63
    unary_op   go to state 64
    const      go to state 65
    func_call  go to state 66
    cond_expr  go to state 67
    cast       go to state 68


State 49

   87 unary_op: NOT .

    $default  reduce using rule 87 (unary_op)


State 50

   86 unary_op: MINUS .

    $default  reduce using rule 86 (unary_op)


State 51

   97 cast: INTEGER .

    $default  reduce using rule 97 (cast)


State 52

   98 cast: REAL .

    $default  reduce using rule 98 (cast)


State 53

   89 const: REALCONST .

    $default  reduce using rule 89 (const)


State 54

   88 const: INTCONST .

    $default  reduce using rule 88 (const)


State 55

   90 const: STRCONST .

    $default  reduce using rule 90 (const)


State 56

   81 factor: ID .
   93 func_call: ID . @13 '(' opt_expr_list ')'

    '('       reduce using rule 92 (@13)
    $default  reduce using rule 81 (factor)

    @13  go to state 75


State 57

   91 const: BOOLCONST .

    $default  reduce using rule 91 (const)


State 58

   80 factor: '(' . expr ')'

    IF         shift, and go to state 48
    NOT        shift, and go to state 49
    MINUS      shift, and go to state 50
    INTEGER    shift, and go to state 51
    REAL       shift, and go to state 52
    REALCONST  shift, and go to state 53
    INTCONST   shift, and go to state 54
    STRCONST   shift, and go to state 55
    ID         shift, and go to state 56
    BOOLCONST  shift, and go to state 57
    '('        shift, and go to state 58

    expr       go to state 83
    bool_term  go to state 60
    rel_term   go to state 61
    low_term   go to state 62
    factor     go to state 63
    unary_op   go to state 64
    const      go to state 65
    func_call  go to state 66
    cond_expr  go to state 67
    cast       go to state 68


State 59

   42 if_stat: IF expr . THEN stat_list opt_else_stat END
   59 expr: expr . logic_op bool_term

    THEN  shift, and go to state 84
    AND   shift, and go to state 85
    OR    shift, and go to state 86

    logic_op  go to state 87


State 60

   60 expr: bool_term .

    $default  reduce using rule 60 (expr)


State 61

   63 bool_term: rel_term . rel_op rel_term
   64          | rel_term .
   71 rel_term: rel_term . low_prec_op low_term

    EQ     shift, and go to state 88
    NE     shift, and go to state 89
    GE     shift, and go to state 90
    GT     shift, and go to state 91
    LT     shift, and go to state 92
    LE     shift, and go to state 93
    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95

    $default  reduce using rule 64 (bool_term)

    rel_op       go to state 96
    low_prec_op  go to state 97


State 62

   72 rel_term: low_term .
   75 low_term: low_term . high_prec_op factor

    MUL  shift, and go to state 98
    DIV  shift, and go to state 99

    $default  reduce using rule 72 (rel_term)

    high_prec_op  go to state 100


State 63

   76 low_term: factor .

    $default  reduce using rule 76 (low_term)


State 64

   79 factor: unary_op . factor

    IF         shift, and go to state 48
    NOT        shift, and go to state 49
    MINUS      shift, and go to state 50
    INTEGER    shift, and go to state 51
    REAL       shift, and go to state 52
    REALCONST  shift, and go to state 53
    INTCONST   shift, and go to state 54
    STRCONST   shift, and go to state 55
    ID         shift, and go to state 56
    BOOLCONST  shift, and go to state 57
    '('        shift, and go to state 58

    factor     go to state 101
    unary_op   go to state 64
    const      go to state 65
    func_call  go to state 66
    cond_expr  go to state 67
    cast       go to state 68


State 65

   82 factor: const .

    $default  reduce using rule 82 (factor)


State 66

   83 factor: func_call .

    $default  reduce using rule 83 (factor)


State 67

   84 factor: cond_expr .

    $default  reduce using rule 84 (factor)


State 68

   85 factor: cast . '(' expr ')'

    '('  shift, and go to state 102


State 69

   45 while_stat: WHILE expr . DO stat_list END
   59 expr: expr . logic_op bool_term

    DO   shift, and go to state 103
    AND  shift, and go to state 85
    OR   shift, and go to state 86

    logic_op  go to state 87


State 70

   47 for_stat: FOR ID . @10 ASSIGN expr TO expr DO stat_list END

    $default  reduce using rule 46 (@10)

    @10  go to state 104


State 71

   48 return_stat: RETURN opt_expr .

    $default  reduce using rule 48 (return_stat)


State 72

   49 opt_expr: expr .
   59 expr: expr . logic_op bool_term

    AND  shift, and go to state 85
    OR   shift, and go to state 86

    $default  reduce using rule 49 (opt_expr)

    logic_op  go to state 87


State 73

   53 read_stat: READ $@11 . '(' id_list $@12 ')'

    '('  shift, and go to state 105


State 74

   41 assign_stat: ID @9 . ASSIGN expr

    ASSIGN  shift, and go to state 106


State 75

   93 func_call: ID @13 . '(' opt_expr_list ')'

    '('  shift, and go to state 107


State 76

   28 body: BODY stat_list END .

    $default  reduce using rule 28 (body)


State 77

   29 stat_list: stat ';' . stat_list
   30          | stat ';' .

    IF       shift, and go to state 19
    WHILE    shift, and go to state 20
    FOR      shift, and go to state 21
    BREAK    shift, and go to state 22
    RETURN   shift, and go to state 23
    WRITE    shift, and go to state 24
    WRITELN  shift, and go to state 25
    READ     shift, and go to state 26
    ID       shift, and go to state 27

    $default  reduce using rule 30 (stat_list)

    stat_list    go to state 108
    stat         go to state 29
    assign_stat  go to state 30
    if_stat      go to state 31
    while_stat   go to state 32
    for_stat     go to state 33
    return_stat  go to state 34
    read_stat    go to state 35
    write_stat   go to state 36
    write_op     go to state 37
    func_call    go to state 38


State 78

   54 write_stat: write_op '(' . expr_list ')'

    IF         shift, and go to state 48
    NOT        shift, and go to state 49
    MINUS      shift, and go to state 50
    INTEGER    shift, and go to state 51
    REAL       shift, and go to state 52
    REALCONST  shift, and go to state 53
    INTCONST   shift, and go to state 54
    STRCONST   shift, and go to state 55
    ID         shift, and go to state 56
    BOOLCONST  shift, and go to state 57
    '('        shift, and go to state 58

    expr_list  go to state 109
    expr       go to state 110
    bool_term  go to state 60
    rel_term   go to state 61
    low_term   go to state 62
    factor     go to state 63
    unary_op   go to state 64
    const      go to state 65
    func_call  go to state 66
    cond_expr  go to state 67
    cast       go to state 68


State 79

    7 id_list: ID @2 ',' id_list .

    $default  reduce using rule 7 (id_list)


State 80

    5 var_decl: $@1 id_list DECL type ';' .

    $default  reduce using rule 5 (var_decl)


State 81

   20 func_decl: FUNC ID @3 $@4 '(' . opt_param_list ')' DECL $@5 type var_decl_list body ';' $@6

    ID        reduce using rule 25 ($@7)
    $default  reduce using rule 22 (opt_param_list)

    opt_param_list  go to state 111
    param_list      go to state 112
    param_decl      go to state 113
    $@7             go to state 114


State 82

   59 expr: expr . logic_op bool_term
   96 cond_expr: IF expr . THEN expr ELSE expr END

    THEN  shift, and go to state 115
    AND   shift, and go to state 85
    OR    shift, and go to state 86

    logic_op  go to state 87


State 83

   59 expr: expr . logic_op bool_term
   80 factor: '(' expr . ')'

    AND  shift, and go to state 85
    OR   shift, and go to state 86
    ')'  shift, and go to state 116

    logic_op  go to state 87


State 84

   42 if_stat: IF expr THEN . stat_list opt_else_stat END

    IF       shift, and go to state 19
    WHILE    shift, and go to state 20
    FOR      shift, and go to state 21
    BREAK    shift, and go to state 22
    RETURN   shift, and go to state 23
    WRITE    shift, and go to state 24
    WRITELN  shift, and go to state 25
    READ     shift, and go to state 26
    ID       shift, and go to state 27

    stat_list    go to state 117
    stat         go to state 29
    assign_stat  go to state 30
    if_stat      go to state 31
    while_stat   go to state 32
    for_stat     go to state 33
    return_stat  go to state 34
    read_stat    go to state 35
    write_stat   go to state 36
    write_op     go to state 37
    func_call    go to state 38


State 85

   61 logic_op: AND .

    $default  reduce using rule 61 (logic_op)


State 86

   62 logic_op: OR .

    $default  reduce using rule 62 (logic_op)


State 87

   59 expr: expr logic_op . bool_term

    IF         shift, and go to state 48
    NOT        shift, and go to state 49
    MINUS      shift, and go to state 50
    INTEGER    shift, and go to state 51
    REAL       shift, and go to state 52
    REALCONST  shift, and go to state 53
    INTCONST   shift, and go to state 54
    STRCONST   shift, and go to state 55
    ID         shift, and go to state 56
    BOOLCONST  shift, and go to state 57
    '('        shift, and go to state 58

    bool_term  go to state 118
    rel_term   go to state 61
    low_term   go to state 62
    factor     go to state 63
    unary_op   go to state 64
    const      go to state 65
    func_call  go to state 66
    cond_expr  go to state 67
    cast       go to state 68


State 88

   65 rel_op: EQ .

    $default  reduce using rule 65 (rel_op)


State 89

   66 rel_op: NE .

    $default  reduce using rule 66 (rel_op)


State 90

   68 rel_op: GE .

    $default  reduce using rule 68 (rel_op)


State 91

   67 rel_op: GT .

    $default  reduce using rule 67 (rel_op)


State 92

   69 rel_op: LT .

    $default  reduce using rule 69 (rel_op)


State 93

   70 rel_op: LE .

    $default  reduce using rule 70 (rel_op)


State 94

   73 low_prec_op: PLUS .

    $default  reduce using rule 73 (low_prec_op)


State 95

   74 low_prec_op: MINUS .

    $default  reduce using rule 74 (low_prec_op)


State 96

   63 bool_term: rel_term rel_op . rel_term

    IF         shift, and go to state 48
    NOT        shift, and go to state 49
    MINUS      shift, and go to state 50
    INTEGER    shift, and go to state 51
    REAL       shift, and go to state 52
    REALCONST  shift, and go to state 53
    INTCONST   shift, and go to state 54
    STRCONST   shift, and go to state 55
    ID         shift, and go to state 56
    BOOLCONST  shift, and go to state 57
    '('        shift, and go to state 58

    rel_term   go to state 119
    low_term   go to state 62
    factor     go to state 63
    unary_op   go to state 64
    const      go to state 65
    func_call  go to state 66
    cond_expr  go to state 67
    cast       go to state 68


State 97

   71 rel_term: rel_term low_prec_op . low_term

    IF         shift, and go to state 48
    NOT        shift, and go to state 49
    MINUS      shift, and go to state 50
    INTEGER    shift, and go to state 51
    REAL       shift, and go to state 52
    REALCONST  shift, and go to state 53
    INTCONST   shift, and go to state 54
    STRCONST   shift, and go to state 55
    ID         shift, and go to state 56
    BOOLCONST  shift, and go to state 57
    '('        shift, and go to state 58

    low_term   go to state 120
    factor     go to state 63
    unary_op   go to state 64
    const      go to state 65
    func_call  go to state 66
    cond_expr  go to state 67
    cast       go to state 68


State 98

   77 high_prec_op: MUL .

    $default  reduce using rule 77 (high_prec_op)


State 99

   78 high_prec_op: DIV .

    $default  reduce using rule 78 (high_prec_op)


State 100

   75 low_term: low_term high_prec_op . factor

    IF         shift, and go to state 48
    NOT        shift, and go to state 49
    MINUS      shift, and go to state 50
    INTEGER    shift, and go to state 51
    REAL       shift, and go to state 52
    REALCONST  shift, and go to state 53
    INTCONST   shift, and go to state 54
    STRCONST   shift, and go to state 55
    ID         shift, and go to state 56
    BOOLCONST  shift, and go to state 57
    '('        shift, and go to state 58

    factor     go to state 121
    unary_op   go to state 64
    const      go to state 65
    func_call  go to state 66
    cond_expr  go to state 67
    cast       go to state 68


State 101

   79 factor: unary_op factor .

    $default  reduce using rule 79 (factor)


State 102

   85 factor: cast '(' . expr ')'

    IF         shift, and go to state 48
    NOT        shift, and go to state 49
    MINUS      shift, and go to state 50
    INTEGER    shift, and go to state 51
    REAL       shift, and go to state 52
    REALCONST  shift, and go to state 53
    INTCONST   shift, and go to state 54
    STRCONST   shift, and go to state 55
    ID         shift, and go to state 56
    BOOLCONST  shift, and go to state 57
    '('        shift, and go to state 58

    expr       go to state 122
    bool_term  go to state 60
    rel_term   go to state 61
    low_term   go to state 62
    factor     go to state 63
    unary_op   go to state 64
    const      go to state 65
    func_call  go to state 66
    cond_expr  go to state 67
    cast       go to state 68


State 103

   45 while_stat: WHILE expr DO . stat_list END

    IF       shift, and go to state 19
    WHILE    shift, and go to state 20
    FOR      shift, and go to state 21
    BREAK    shift, and go to state 22
    RETURN   shift, and go to state 23
    WRITE    shift, and go to state 24
    WRITELN  shift, and go to state 25
    READ     shift, and go to state 26
    ID       shift, and go to state 27

    stat_list    go to state 123
    stat         go to state 29
    assign_stat  go to state 30
    if_stat      go to state 31
    while_stat   go to state 32
    for_stat     go to state 33
    return_stat  go to state 34
    read_stat    go to state 35
    write_stat   go to state 36
    write_op     go to state 37
    func_call    go to state 38


State 104

   47 for_stat: FOR ID @10 . ASSIGN expr TO expr DO stat_list END

    ASSIGN  shift, and go to state 124


State 105

   53 read_stat: READ $@11 '(' . id_list $@12 ')'

    ID  shift, and go to state 10

    id_list  go to state 125


State 106

   41 assign_stat: ID @9 ASSIGN . expr

    IF         shift, and go to state 48
    NOT        shift, and go to state 49
    MINUS      shift, and go to state 50
    INTEGER    shift, and go to state 51
    REAL       shift, and go to state 52
    REALCONST  shift, and go to state 53
    INTCONST   shift, and go to state 54
    STRCONST   shift, and go to state 55
    ID         shift, and go to state 56
    BOOLCONST  shift, and go to state 57
    '('        shift, and go to state 58

    expr       go to state 126
    bool_term  go to state 60
    rel_term   go to state 61
    low_term   go to state 62
    factor     go to state 63
    unary_op   go to state 64
    const      go to state 65
    func_call  go to state 66
    cond_expr  go to state 67
    cast       go to state 68


State 107

   93 func_call: ID @13 '(' . opt_expr_list ')'

    IF         shift, and go to state 48
    NOT        shift, and go to state 49
    MINUS      shift, and go to state 50
    INTEGER    shift, and go to state 51
    REAL       shift, and go to state 52
    REALCONST  shift, and go to state 53
    INTCONST   shift, and go to state 54
    STRCONST   shift, and go to state 55
    ID         shift, and go to state 56
    BOOLCONST  shift, and go to state 57
    '('        shift, and go to state 58

    $default  reduce using rule 95 (opt_expr_list)

    expr_list      go to state 127
    expr           go to state 110
    bool_term      go to state 60
    rel_term       go to state 61
    low_term       go to state 62
    factor         go to state 63
    unary_op       go to state 64
    const          go to state 65
    func_call      go to state 66
    opt_expr_list  go to state 128
    cond_expr      go to state 67
    cast           go to state 68


State 108

   29 stat_list: stat ';' stat_list .

    $default  reduce using rule 29 (stat_list)


State 109

   54 write_stat: write_op '(' expr_list . ')'

    ')'  shift, and go to state 129


State 110

   57 expr_list: expr . ',' expr_list
   58          | expr .
   59 expr: expr . logic_op bool_term

    AND  shift, and go to state 85
    OR   shift, and go to state 86
    ','  shift, and go to state 130

    $default  reduce using rule 58 (expr_list)

    logic_op  go to state 87


State 111

   20 func_decl: FUNC ID @3 $@4 '(' opt_param_list . ')' DECL $@5 type var_decl_list body ';' $@6

    ')'  shift, and go to state 131


State 112

   21 opt_param_list: param_list .

    $default  reduce using rule 21 (opt_param_list)


State 113

   23 param_list: param_decl . ',' param_list
   24           | param_decl .

    ','  shift, and go to state 132

    $default  reduce using rule 24 (param_list)


State 114

   27 param_decl: $@7 . ID @8 DECL type

    ID  shift, and go to state 133


State 115

   96 cond_expr: IF expr THEN . expr ELSE expr END

    IF         shift, and go to state 48
    NOT        shift, and go to state 49
    MINUS      shift, and go to state 50
    INTEGER    shift, and go to state 51
    REAL       shift, and go to state 52
    REALCONST  shift, and go to state 53
    INTCONST   shift, and go to state 54
    STRCONST   shift, and go to state 55
    ID         shift, and go to state 56
    BOOLCONST  shift, and go to state 57
    '('        shift, and go to state 58

    expr       go to state 134
    bool_term  go to state 60
    rel_term   go to state 61
    low_term   go to state 62
    factor     go to state 63
    unary_op   go to state 64
    const      go to state 65
    func_call  go to state 66
    cond_expr  go to state 67
    cast       go to state 68


State 116

   80 factor: '(' expr ')' .

    $default  reduce using rule 80 (factor)


State 117

   42 if_stat: IF expr THEN stat_list . opt_else_stat END

    ELSE  shift, and go to state 135

    $default  reduce using rule 44 (opt_else_stat)

    opt_else_stat  go to state 136


State 118

   59 expr: expr logic_op bool_term .

    $default  reduce using rule 59 (expr)


State 119

   63 bool_term: rel_term rel_op rel_term .
   71 rel_term: rel_term . low_prec_op low_term

    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95

    $default  reduce using rule 63 (bool_term)

    low_prec_op  go to state 97


State 120

   71 rel_term: rel_term low_prec_op low_term .
   75 low_term: low_term . high_prec_op factor

    MUL  shift, and go to state 98
    DIV  shift, and go to state 99

    $default  reduce using rule 71 (rel_term)

    high_prec_op  go to state 100


State 121

   75 low_term: low_term high_prec_op factor .

    $default  reduce using rule 75 (low_term)


State 122

   59 expr: expr . logic_op bool_term
   85 factor: cast '(' expr . ')'

    AND  shift, and go to state 85
    OR   shift, and go to state 86
    ')'  shift, and go to state 137

    logic_op  go to state 87


State 123

   45 while_stat: WHILE expr DO stat_list . END

    END  shift, and go to state 138


State 124

   47 for_stat: FOR ID @10 ASSIGN . expr TO expr DO stat_list END

    IF         shift, and go to state 48
    NOT        shift, and go to state 49
    MINUS      shift, and go to state 50
    INTEGER    shift, and go to state 51
    REAL       shift, and go to state 52
    REALCONST  shift, and go to state 53
    INTCONST   shift, and go to state 54
    STRCONST   shift, and go to state 55
    ID         shift, and go to state 56
    BOOLCONST  shift, and go to state 57
    '('        shift, and go to state 58

    expr       go to state 139
    bool_term  go to state 60
    rel_term   go to state 61
    low_term   go to state 62
    factor     go to state 63
    unary_op   go to state 64
    const      go to state 65
    func_call  go to state 66
    cond_expr  go to state 67
    cast       go to state 68


State 125

   53 read_stat: READ $@11 '(' id_list . $@12 ')'

    $default  reduce using rule 52 ($@12)

    $@12  go to state 140


State 126

   41 assign_stat: ID @9 ASSIGN expr .
   59 expr: expr . logic_op bool_term

    AND  shift, and go to state 85
    OR   shift, and go to state 86

    $default  reduce using rule 41 (assign_stat)

    logic_op  go to state 87


State 127

   94 opt_expr_list: expr_list .

    $default  reduce using rule 94 (opt_expr_list)


State 128

   93 func_call: ID @13 '(' opt_expr_list . ')'

    ')'  shift, and go to state 141


State 129

   54 write_stat: write_op '(' expr_list ')' .

    $default  reduce using rule 54 (write_stat)


State 130

   57 expr_list: expr ',' . expr_list

    IF         shift, and go to state 48
    NOT        shift, and go to state 49
    MINUS      shift, and go to state 50
    INTEGER    shift, and go to state 51
    REAL       shift, and go to state 52
    REALCONST  shift, and go to state 53
    INTCONST   shift, and go to state 54
    STRCONST   shift, and go to state 55
    ID         shift, and go to state 56
    BOOLCONST  shift, and go to state 57
    '('        shift, and go to state 58

    expr_list  go to state 142
    expr       go to state 110
    bool_term  go to state 60
    rel_term   go to state 61
    low_term   go to state 62
    factor     go to state 63
    unary_op   go to state 64
    const      go to state 65
    func_call  go to state 66
    cond_expr  go to state 67
    cast       go to state 68


State 131

   20 func_decl: FUNC ID @3 $@4 '(' opt_param_list ')' . DECL $@5 type var_decl_list body ';' $@6

    DECL  shift, and go to state 143


State 132

   23 param_list: param_decl ',' . param_list

    $default  reduce using rule 25 ($@7)

    param_list  go to state 144
    param_decl  go to state 113
    $@7         go to state 114


State 133

   27 param_decl: $@7 ID . @8 DECL type

    $default  reduce using rule 26 (@8)

    @8  go to state 145


State 134

   59 expr: expr . logic_op bool_term
   96 cond_expr: IF expr THEN expr . ELSE expr END

    ELSE  shift, and go to state 146
    AND   shift, and go to state 85
    OR    shift, and go to state 86

    logic_op  go to state 87


State 135

   43 opt_else_stat: ELSE . stat_list

    IF       shift, and go to state 19
    WHILE    shift, and go to state 20
    FOR      shift, and go to state 21
    BREAK    shift, and go to state 22
    RETURN   shift, and go to state 23
    WRITE    shift, and go to state 24
    WRITELN  shift, and go to state 25
    READ     shift, and go to state 26
    ID       shift, and go to state 27

    stat_list    go to state 147
    stat         go to state 29
    assign_stat  go to state 30
    if_stat      go to state 31
    while_stat   go to state 32
    for_stat     go to state 33
    return_stat  go to state 34
    read_stat    go to state 35
    write_stat   go to state 36
    write_op     go to state 37
    func_call    go to state 38


State 136

   42 if_stat: IF expr THEN stat_list opt_else_stat . END

    END  shift, and go to state 148


State 137

   85 factor: cast '(' expr ')' .

    $default  reduce using rule 85 (factor)


State 138

   45 while_stat: WHILE expr DO stat_list END .

    $default  reduce using rule 45 (while_stat)


State 139

   47 for_stat: FOR ID @10 ASSIGN expr . TO expr DO stat_list END
   59 expr: expr . logic_op bool_term

    TO   shift, and go to state 149
    AND  shift, and go to state 85
    OR   shift, and go to state 86

    logic_op  go to state 87


State 140

   53 read_stat: READ $@11 '(' id_list $@12 . ')'

    ')'  shift, and go to state 150


State 141

   93 func_call: ID @13 '(' opt_expr_list ')' .

    $default  reduce using rule 93 (func_call)


State 142

   57 expr_list: expr ',' expr_list .

    $default  reduce using rule 57 (expr_list)


State 143

   20 func_decl: FUNC ID @3 $@4 '(' opt_param_list ')' DECL . $@5 type var_decl_list body ';' $@6

    $default  reduce using rule 18 ($@5)

    $@5  go to state 151


State 144

   23 param_list: param_decl ',' param_list .

    $default  reduce using rule 23 (param_list)


State 145

   27 param_decl: $@7 ID @8 . DECL type

    DECL  shift, and go to state 152


State 146

   96 cond_expr: IF expr THEN expr ELSE . expr END

    IF         shift, and go to state 48
    NOT        shift, and go to state 49
    MINUS      shift, and go to state 50
    INTEGER    shift, and go to state 51
    REAL       shift, and go to state 52
    REALCONST  shift, and go to state 53
    INTCONST   shift, and go to state 54
    STRCONST   shift, and go to state 55
    ID         shift, and go to state 56
    BOOLCONST  shift, and go to state 57
    '('        shift, and go to state 58

    expr       go to state 153
    bool_term  go to state 60
    rel_term   go to state 61
    low_term   go to state 62
    factor     go to state 63
    unary_op   go to state 64
    const      go to state 65
    func_call  go to state 66
    cond_expr  go to state 67
    cast       go to state 68


State 147

   43 opt_else_stat: ELSE stat_list .

    $default  reduce using rule 43 (opt_else_stat)


State 148

   42 if_stat: IF expr THEN stat_list opt_else_stat END .

    $default  reduce using rule 42 (if_stat)


State 149

   47 for_stat: FOR ID @10 ASSIGN expr TO . expr DO stat_list END

    IF         shift, and go to state 48
    NOT        shift, and go to state 49
    MINUS      shift, and go to state 50
    INTEGER    shift, and go to state 51
    REAL       shift, and go to state 52
    REALCONST  shift, and go to state 53
    INTCONST   shift, and go to state 54
    STRCONST   shift, and go to state 55
    ID         shift, and go to state 56
    BOOLCONST  shift, and go to state 57
    '('        shift, and go to state 58

    expr       go to state 154
    bool_term  go to state 60
    rel_term   go to state 61
    low_term   go to state 62
    factor     go to state 63
    unary_op   go to state 64
    const      go to state 65
    func_call  go to state 66
    cond_expr  go to state 67
    cast       go to state 68


State 150

   53 read_stat: READ $@11 '(' id_list $@12 ')' .

    $default  reduce using rule 53 (read_stat)


State 151

   20 func_decl: FUNC ID @3 $@4 '(' opt_param_list ')' DECL $@5 . type var_decl_list body ';' $@6

    VOID     shift, and go to state 41
    INTEGER  shift, and go to state 42
    STRING   shift, and go to state 43
    BOOLEAN  shift, and go to state 44
    REAL     shift, and go to state 45

    type  go to state 155


State 152

   27 param_decl: $@7 ID @8 DECL . type

    VOID     shift, and go to state 41
    INTEGER  shift, and go to state 42
    STRING   shift, and go to state 43
    BOOLEAN  shift, and go to state 44
    REAL     shift, and go to state 45

    type  go to state 156


State 153

   59 expr: expr . logic_op bool_term
   96 cond_expr: IF expr THEN expr ELSE expr . END

    END  shift, and go to state 157
    AND  shift, and go to state 85
    OR   shift, and go to state 86

    logic_op  go to state 87


State 154

   47 for_stat: FOR ID @10 ASSIGN expr TO expr . DO stat_list END
   59 expr: expr . logic_op bool_term

    DO   shift, and go to state 158
    AND  shift, and go to state 85
    OR   shift, and go to state 86

    logic_op  go to state 87


State 155

   20 func_decl: FUNC ID @3 $@4 '(' opt_param_list ')' DECL $@5 type . var_decl_list body ';' $@6

    ID        reduce using rule 4 ($@1)
    $default  reduce using rule 3 (var_decl_list)

    var_decl_list  go to state 159
    var_decl       go to state 3
    $@1            go to state 4


State 156

   27 param_decl: $@7 ID @8 DECL type .

    $default  reduce using rule 27 (param_decl)


State 157

   96 cond_expr: IF expr THEN expr ELSE expr END .

    $default  reduce using rule 96 (cond_expr)


State 158

   47 for_stat: FOR ID @10 ASSIGN expr TO expr DO . stat_list END

    IF       shift, and go to state 19
    WHILE    shift, and go to state 20
    FOR      shift, and go to state 21
    BREAK    shift, and go to state 22
    RETURN   shift, and go to state 23
    WRITE    shift, and go to state 24
    WRITELN  shift, and go to state 25
    READ     shift, and go to state 26
    ID       shift, and go to state 27

    stat_list    go to state 160
    stat         go to state 29
    assign_stat  go to state 30
    if_stat      go to state 31
    while_stat   go to state 32
    for_stat     go to state 33
    return_stat  go to state 34
    read_stat    go to state 35
    write_stat   go to state 36
    write_op     go to state 37
    func_call    go to state 38


State 159

   20 func_decl: FUNC ID @3 $@4 '(' opt_param_list ')' DECL $@5 type var_decl_list . body ';' $@6

    BODY  shift, and go to state 13

    body  go to state 161


State 160

   47 for_stat: FOR ID @10 ASSIGN expr TO expr DO stat_list . END

    END  shift, and go to state 162


State 161

   20 func_decl: FUNC ID @3 $@4 '(' opt_param_list ')' DECL $@5 type var_decl_list body . ';' $@6

    ';'  shift, and go to state 163


State 162

   47 for_stat: FOR ID @10 ASSIGN expr TO expr DO stat_list END .

    $default  reduce using rule 47 (for_stat)


State 163

   20 func_decl: FUNC ID @3 $@4 '(' opt_param_list ')' DECL $@5 type var_decl_list body ';' . $@6

    $default  reduce using rule 19 ($@6)

    $@6  go to state 164


State 164

   20 func_decl: FUNC ID @3 $@4 '(' opt_param_list ')' DECL $@5 type var_decl_list body ';' $@6 .

    $default  reduce using rule 20 (func_decl)
